std {
    string,
    atomic_int,
    atomic_bool,
    ifstream,
    ofstream,
    iostream,
    fstream,
    sstream,

    chrono {
        steady_clock {
            time_point,
        }
    }
};

boost {
    thread,
    mutex,
    condition,
    unique_lock,

    log {
        core,
        sources,
        expressions,
        sinks,
        attributes,
        keywords,
        record_view,
        formatting_ostream,
    }

    mutex {
        scoped_lock,
    },

    filesystem {
        directory_iterator,
        path
    },
};

nlohmann {
    json,
};

uWS {
    Hub,
};

_3th {
    pid_t,
    cv_errcode,
    cudaError_t,
    cudaTextureObject_t,
    cudaSurfaceObject_t,
    float2,
    float3,
    float4,
    uint,
    uint2,
    uint3,
    uint4,
    int2,
    int3,
    dim3,
    uchar4,
    uchar3,
};